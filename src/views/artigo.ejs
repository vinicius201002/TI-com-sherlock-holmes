<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Artigos</title>
    <link rel="stylesheet" href="/styles/artigos/artigos.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
        integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="/scripts/sessao.js"></script>

</head>

<body>
    <nav id="navbar" class="navbar">
        <img onclick="direcionarHome()" src="/assets/img/user_2.png" width="80px" alt="logo">
        <ul id="opcoes" class="opcoes">
            <li><a href="minhaconta.html">Minha conta</a></li>
            <li><a onclick="deslogar()">Sair</a></li>
        </ul>
    </nav>
    <div class="container">
        <div class="coluna1">
            <h1>
                <%=titulo%>
            </h1>
            <div style="background-image: url('<%=imagem%>');" class="imagem"></div>
            <div class="info">
                <p>Publicado por: <%=nome%>
                </p>
                <p>Publicado em <%= new Date(dtCriacao).toLocaleDateString('pt-BR', { day: '2-digit' , month: 'long' ,
                        year: 'numeric' })%>
                </p>
                <p>
                    <%= corpo %>
                </p>
            </div>
        </div>
        <div class="coluna2">
            <div id="barralateral" class="box">
                <p>Outros artigos</p>
                <a href="#">Quem é Sherlock Holmes (999 acessos)</a>
                <a href="#">As melhores histórias (1203 acessos)</a>
                <a href="#">Conheça os personagens (1203 acessos)</a>
            </div>
        </div>
    </div>
    <div class="curtidas">
        <p>Gostou? Considere curtir a postagem!</p>
        <div id="box-curtidas" class="box-curtidas">
            <i onclick="verificarCurtida()" class="fa-regular fa-heart"></i>
            <p id="qtdCurtidas">700</p>
        </div>
    </div>
    <div class="comentarios">
        <p>Deixe seu comentário</p>
        <textarea id="corpoComentario"> </textarea>
        <button onclick="postarComentario()">Publicar</button>
        <div class="cards">
            <!-- <div class="card">
                 <i class="fa-solid fa-user"></i> 
                <img src="/assets/img/user_2.png">
                <p><span>Sherlock Holmes comentou:</span> Elementar, meu caro Watson!</p>
            </div> -->
        </div>
    </div>
</body>

</html>
<script>
    var jaCurtiu = false;

    // Função para obter o ID da postagem da URL
    function obterIDNoURL() {
        const caminho = window.location.pathname;
        const partesDoCaminho = caminho.split('/');
        return partesDoCaminho[partesDoCaminho.length - 1];
    }

    // buscar curtidas da postagem
    var idUsuario = sessionStorage.getItem("id_usuario");
    var idPostagem = obterIDNoURL();
    // Buscar comentarios
    listarComentarios(idPostagem)
    // cadastrar visualizacao
    cadastrarVisualizacao(idUsuario, idPostagem) 

    function listarCurtida(idPostagem, idUsuario) {
        fetch(`/curtidas/${idPostagem}/${idUsuario}`, {
            method: "GET"
        })
            .then((resposta) => {
                if (resposta.ok) {
                    resposta.json()
                        .then((dados) => {
                            if (dados.length == 0) {
                                console.log("Usuário não curtiu essa postagem");
                            } else {
                                console.log("Usuário já curtiu a postagem");
                                jaCurtiu = true;
                                // Acessa o elemento do DOM
                                const box_curtidas = document.getElementById('box-curtidas');
                                // Altera o ícone de coração vazio para cheio
                                const iconeCurtida = box_curtidas.querySelector('i');
                                iconeCurtida.classList.remove('fa-regular', 'fa-heart');
                                iconeCurtida.classList.add('fa-solid', 'fa-heart');
                            }
                        })
                        .catch((erro) => {
                            console.log("Erro ao converter JSON", erro)
                        })
                }
                else {
                    console.log("Possível erro na resposta", resposta)
                }
            })
            .catch((erro) => {
                console.log(erro);
            })

    }

    listarCurtida(idPostagem, idUsuario);
    listarNumeroCurtidas()
    listarPostagensBarraLateral()


    function deslogar() {
        sessionStorage.clear();
        window.location.reload();
    }

    function cadastrarVisualizacao(idUsuario, idPostagem) {
        fetch(`/visualizacoes/${idPostagem}/${idUsuario}`, {
            method: "POST"

        })
        .then((resposta) => {
            if (resposta.ok) {
                console.log("Visualização cadastrada.")
            }
        })
        .catch((erro) => {
            console.log(erro)
        })
    }

    function direcionarHome() {
        window.location.href = "/home.html";
    }

    function listarNumeroCurtidas() {
        fetch(`/curtidas/${idPostagem}`, {
            method: "GET"
        })
            .then((resposta) => {
                if (resposta.ok) {
                    resposta.json()
                        .then((dados) => {
                            qtdCurtidas.innerHTML = dados[0].qtdCurtidas;
                        })
                        .catch((erro) => {
                            console.log("Erro ao converter JSON", erro)
                        })
                }
                else {
                    console.log("Possível erro na resposta", resposta)
                }
            })
            .catch((erro) => {
                console.log(erro);
            })
    }

    function verificarCurtida() {
        if (jaCurtiu) {
            // Mudando classe para atualizar o visual
            // Acessa o elemento do DOM
            const box_curtidas = document.getElementById('box-curtidas');
            // Altera o ícone de coração vazio para cheio
            const iconeCurtida = box_curtidas.querySelector('i');
            iconeCurtida.classList.remove('fa-solid', 'fa-heart');
            iconeCurtida.classList.add('fa-regular', 'fa-heart');

            // requisição para retirar a curtida
            fetch(`/curtidas/${idPostagem}/${idUsuario}`, {
                method: "DELETE"
            })
                .then((resposta) => {
                    if (resposta.ok) {
                        // alert("Você descurtiu a postagem.");
                        // decrementando o número de curtidas
                        // incrementando o valor das curtidas
                        const p_qtdCurtidas = document.getElementById("qtdCurtidas");
                        p_qtdCurtidas.innerHTML = Number(p_qtdCurtidas.innerHTML) - 1;
                    }
                })
                .catch((erro) => {
                    console.log(erro)
                })

            // no final, indicamos que o curtiu é false
            jaCurtiu = false;

        } else {
            const box_curtidas = document.getElementById('box-curtidas');
            // Altera o ícone de coração vazio para cheio
            const iconeCurtida = box_curtidas.querySelector('i');
            iconeCurtida.classList.remove('fa-regular', 'fa-heart');
            iconeCurtida.classList.add('fa-solid', 'fa-heart');

            // requisição para retirar a curtida
            fetch(`/curtidas/${idPostagem}/${idUsuario}`, {
                method: "POST"
            })
                .then((resposta) => {
                    if (resposta.ok) {
                        // alert("Você curtiu a postagem.");
                        // incrementando o valor das curtidas
                        const p_qtdCurtidas = document.getElementById("qtdCurtidas");
                        p_qtdCurtidas.innerHTML = Number(p_qtdCurtidas.innerHTML) + 1;

                    }
                })
                .catch((erro) => {
                    console.log(erro)
                })

            jaCurtiu = true;
        }

    }

    function listarComentarios(idPostagem) {
        fetch(`/comentarios/${idPostagem}`, {
            method: "GET"
        })
        .then(resposta => {
            if (resposta.ok) {
                resposta.json()
                .then(dados => {
                    // populando div de comentários
                    const cards = document.getElementsByClassName('cards')[0]
                    for (var i = 0; i < dados.length; i++) {
                        console.log(dados[i])
                        const card = document.createElement('div');
                        const img = document.createElement('img');
                        img.setAttribute("src", "/assets/img/user_2.png");
                        const p = document.createElement('p');
                        p.innerHTML = `<span>${dados[i].nome} comentou:</span> ${dados[i].corpo} (${formatarData(dados[i].dataHora)})`
                        card.append(img)
                        card.append(p)

                        cards.append(card);

                        card.setAttribute("class", "card");


                    }
                    console.log(dados);
                })
                .catch(erro => {
                    console.log("Erro ao converter o JSON", erro)
                })
            }
        })
        .catch(erro => {
            console.log(erro)
        })
    } 

    function postarComentario() {
        var corpo = (corpoComentario.value).trim();
        console.log(corpo)

        if (corpo != '') {
            // requisição para postar comentário
            fetch(`/comentarios/${idPostagem}/${idUsuario}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    corpoServer: corpo
                })
            })
            .then((resposta => {
                if (resposta.ok) {
                    window.location.reload();
                }
            }))
            .catch((erro) => {
                console.log(erro);
            })
        } else {
            alert("Preencha o campo para comentar.");
        }
    }

    function listarPostagensBarraLateral() {
        fetch("/postagens/dashboard/visualizacoesPorPostagem", {
            method: "GET"
        })
        .then(resposta => {
            if (resposta.ok) {
                resposta.json()
                .then(postagens => {
                    var mensagem = "<p>Outros artigos</p>";
                    for (var i = 0; i < postagens.length; i++) {
                        mensagem += `<a href='/postagens/${postagens[i].id}'>${postagens[i].titulo} (${postagens[i].qtdVisualizacoes} visualizações)</a>`;
                    }
                    barralateral.innerHTML = mensagem;
                })
                .catch(erro => {
                    console.log(erro)
                })
            }
        })
        .catch(erro => {
            console.log(erro);
        })
    }

    function formatarData(dateTime) {
    const meses = ["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"];

    // Converter string de data para objeto Date
    const data = new Date(dateTime);

    const dia = data.getDate();
    const mes = meses[data.getMonth()];
    const horas = String(data.getHours()).padStart(2, '0');
    const minutos = String(data.getMinutes()).padStart(2, '0');
    const segundos = String(data.getSeconds()).padStart(2, '0');

    // Formatar data no formato desejado
    return `${dia} de ${mes} às ${horas}:${minutos}:${segundos}`;
}
</script>